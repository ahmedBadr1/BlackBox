<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;



class Order extends Model
{
    use HasFactory , SoftDeletes;
    use \Znck\Eloquent\Traits\BelongsToThrough;
//    protected static function boot()
//    {
//        parent::boot(); // TODO: Change the autogenerated stub
//        static::created(function ($order){
//            $order->receipt()->create([
//                'order_id' => $order->id,
//                'orders_count' => 1,
//                'total' => $order->value,
//                'user_id' => $order->user_id,
//            ]);
//        });
//    }
    /**
     * The attributes that are mass assignable.
     *
     * @var string[]
     */
    protected $fillable = [
        'product_name',
        'value',
        'cust_name',
        'cust_num',
        'address',
        'area_id',
        'quantity',
        'notes',
        'status_id',
        'receipt_id',
        'user_id'
    ];
    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array
     */
    protected $hidden = [
        'user_id',
        'receipt_id',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];
    public function state()
    {
        return  $this->belongsToThrough('App\Models\State',['App\Models\Zone', 'App\Models\Area']);
    }
    public function user()
    {
        return  $this->belongsTo(User::class);
    }
    public function area()
    {
        return  $this->belongsTo(Area::class);
    }
    public function receipt()
    {
        return  $this->belongsTo(Receipt::class);
    }
    public function status()
    {
        return  $this->belongsTo(Status::class);
    }


}
